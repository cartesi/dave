ECHO_DIR := "../../../test/programs/echo"
HONEYPOT_DIR := "../../../test/programs/honeypot"
YIELD_DIR := "../../../test/programs/yield"
ANVIL_PATH := "../../../cartesi-rollups/contracts/state.json"
DEPLOYMENTS_DIR := "../../../cartesi-rollups/contracts/deployments"

WEB3_PRIVATE_KEY := "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"

# run PRT rollups test
test MACH_PATH SCRIPT:
  rm -rf _state
  WEB3_PRIVATE_KEY={{WEB3_PRIVATE_KEY}} \
  ANVIL_PATH=`realpath {{ANVIL_PATH}}` \
  TEMPLATE_MACHINE=`realpath {{MACH_PATH}}/machine-image` \
  TEMPLATE_MACHINE_HASH=0x`xxd -p -c32 {{MACH_PATH}}/machine-image/hash` \
  DAVE_APP_FACTORY=`jq -r .address {{DEPLOYMENTS_DIR}}/DaveAppFactory.json` \
  INPUT_BOX=`jq -r .address {{DEPLOYMENTS_DIR}}/cartesiRollups.InputBox.json` \
  lua test_cases/{{SCRIPT}}.lua

# run PRT rollups echo test
test-echo:
  just test {{ECHO_DIR}} simple

# run PRT rollups honeypot test
test-honeypot-all:
  just test {{HONEYPOT_DIR}} stf_all
  just test {{HONEYPOT_DIR}} big_input
  just test {{HONEYPOT_DIR}} gc_match
  just test {{HONEYPOT_DIR}} gc_tournament

# run PRT rollups yield test
test-yield-all:
  just test {{YIELD_DIR}} stf_all
  just test {{YIELD_DIR}} big_input
  just test {{YIELD_DIR}} gc_match
  just test {{YIELD_DIR}} gc_tournament

test-honeypot-ci:
  just test {{HONEYPOT_DIR}} simple

test-yield-ci:
  just test {{YIELD_DIR}} simple

test-honeypot-case CASE:
  just test {{HONEYPOT_DIR}} {{CASE}}

test-yield-case CASE:
  just test {{YIELD_DIR}} {{CASE}}

# read logs from PRT Rollups node, run in separate terminal after `test-echo`
read-node-logs:
  cat dave.log; tail -f dave.log

# sepolia-honeypot
download-sepolia-honeypot: clean-sepolia-honeypot-snapshot
  mkdir -p sepolia/machine-image
  curl -L \
    https://github.com/cartesi/honeypot/releases/download/v2.0.0/honeypot-snapshot-sepolia.tar.gz | \
    tar -xz -C sepolia/machine-image
clean-sepolia-honeypot-snapshot:
  rm -rf sepolia/machine-image

run-sepolia SCRIPT:
  ( set -a; source sepolia/.env; exec lua sepolia/{{SCRIPT}}.lua)
